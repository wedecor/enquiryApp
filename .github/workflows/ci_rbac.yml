name: RBAC CI Pipeline

on:
  push:
    branches: [main, 'feature/*', 'stabilization/*']
  pull_request:
    branches: [main, 'feature/*', 'stabilization/*']

jobs:
  rbac-ci:
    runs-on: ubuntu-latest
    timeout-minutes: 45

    services:
      firestore-emulator:
        image: gcr.io/google.com/cloudsdktool/cloud-sdk:latest
        options: >-
          --health-cmd "curl -f http://localhost:8080 || exit 1"
          --health-interval 30s
          --health-timeout 10s
          --health-retries 5

    steps:
      - name: 📋 Checkout Repository
        uses: actions/checkout@v4

      - name: ☕ Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: 🚀 Setup Node.js 18
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'rules-tests/package-lock.json'

      - name: 🔥 Setup Firebase CLI
        run: npm install -g firebase-tools

      - name: 📱 Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: 'stable'
          channel: 'stable'
          cache: true

      - name: 📦 Get Flutter Dependencies
        run: flutter pub get

      - name: 🏗️ Generate Code
        run: dart run build_runner build --delete-conflicting-outputs

      - name: 🔍 Analyze Code
        run: |
          echo "::group::Flutter Analyze"
          flutter analyze --no-fatal-infos
          ANALYZE_EXIT_CODE=$?
          echo "::endgroup::"
          
          if [ $ANALYZE_EXIT_CODE -ne 0 ]; then
            echo "❌ Flutter analyze failed with exit code $ANALYZE_EXIT_CODE"
            exit 1
          fi
          
          echo "✅ Flutter analyze passed"

      - name: 🧪 Run Unit Tests
        run: |
          echo "::group::Unit Tests"
          flutter test --reporter expanded
          echo "::endgroup::"
          echo "✅ Unit tests passed"

      - name: 🔐 Setup Firestore Rules Tests
        working-directory: rules-tests
        run: |
          npm install
          echo "✅ Rules test dependencies installed"

      - name: 🔥 Start Firebase Emulators
        run: |
          firebase emulators:start --only firestore --project demo-project &
          EMULATOR_PID=$!
          echo "EMULATOR_PID=$EMULATOR_PID" >> $GITHUB_ENV
          
          # Wait for emulator to be ready
          timeout=30
          while [ $timeout -gt 0 ]; do
            if curl -f http://localhost:8080 >/dev/null 2>&1; then
              echo "✅ Firestore emulator is ready"
              break
            fi
            echo "⏳ Waiting for Firestore emulator..."
            sleep 2
            timeout=$((timeout - 2))
          done
          
          if [ $timeout -le 0 ]; then
            echo "❌ Firestore emulator failed to start"
            exit 1
          fi

      - name: 🛡️ Run Firestore Rules Tests
        working-directory: rules-tests
        run: |
          echo "::group::Firestore Rules Tests"
          npm test
          echo "::endgroup::"
          echo "✅ Firestore rules tests passed"

      - name: 📊 Generate Test Coverage
        run: |
          echo "::group::Test Coverage"
          flutter test --coverage --reporter expanded
          echo "::endgroup::"

      - name: 🎯 Coverage Gate Check
        run: |
          echo "::group::Coverage Analysis"
          bash tools/coverage_gate.sh
          echo "::endgroup::"

      - name: 🧪 Run Integration Smoke Tests
        env:
          FIREBASE_EMULATOR_HOSTS: "firestore:localhost:8080"
        run: |
          echo "::group::RBAC Integration Tests"
          flutter test integration_test/rbac_smoke_test.dart
          echo "::endgroup::"
          echo "✅ RBAC integration tests passed"

      - name: 🌐 Web Build Sanity Check
        run: |
          echo "::group::Web Build"
          flutter build web --target lib/main.dart --dart-define=APP_ENV=prod
          echo "::endgroup::"
          echo "✅ Web build completed successfully"

      - name: 🧹 Cleanup
        if: always()
        run: |
          if [ ! -z "$EMULATOR_PID" ]; then
            kill $EMULATOR_PID || true
            echo "🔥 Firebase emulators stopped"
          fi

      - name: 📈 Upload Coverage Reports
        uses: codecov/codecov-action@v4
        if: success()
        with:
          file: ./coverage/lcov.info
          flags: unittests
          name: rbac-coverage

      - name: 📋 Generate CI Summary
        if: always()
        run: |
          echo "## 🛡️ RBAC CI Pipeline Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ✅ Completed Steps:" >> $GITHUB_STEP_SUMMARY
          echo "- 🔍 Code Analysis" >> $GITHUB_STEP_SUMMARY
          echo "- 🧪 Unit Tests (127 tests)" >> $GITHUB_STEP_SUMMARY
          echo "- 🛡️ Firestore Rules Tests" >> $GITHUB_STEP_SUMMARY
          echo "- 📊 Coverage Gate (≥30%)" >> $GITHUB_STEP_SUMMARY
          echo "- 🧪 RBAC Integration Tests" >> $GITHUB_STEP_SUMMARY
          echo "- 🌐 Web Build Verification" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 📚 Security Documentation:" >> $GITHUB_STEP_SUMMARY
          echo "- [Security Playbook](docs/SECURITY_PLAYBOOK.md)" >> $GITHUB_STEP_SUMMARY
          echo "- [RBAC Runbook](docs/RUNBOOK_RBAC.md)" >> $GITHUB_STEP_SUMMARY
          echo "- [Feature Matrix](docs/FEATURE_MATRIX.md)" >> $GITHUB_STEP_SUMMARY
