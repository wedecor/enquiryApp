name: Deploy to Production

on:
  push:
    branches: [ main ]

env:
  FLUTTER_VERSION: '3.32.8'

jobs:
  deploy-web:
    name: Deploy Web to Production
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build Web
        run: flutter build web --release

      - name: Deploy to Firebase Hosting
        uses: w9jds/firebase-action@master
        with:
          args: deploy --only hosting:production
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}

      - name: Notify deployment success
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üöÄ **Production deployment successful!**
              
              üîó **Live URL**: https://${{ secrets.FIREBASE_PROJECT_ID }}.web.app
              
              üìÖ **Deployed at**: ${new Date().toISOString()}`
            })

  deploy-android:
    name: Deploy Android to Play Store
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build App Bundle
        run: flutter build appbundle --release

      - name: Upload to Play Store
        uses: r0adkll/upload-google-play@v1
        with:
          serviceAccountJsonPlainText: ${{ secrets.PLAY_STORE_CONFIG_JSON }}
          packageName: com.wedecor.enquiries
          releaseFiles: build/app/outputs/bundle/release/app-release.aab
          track: internal

  build-ios:
    name: Build iOS for Manual Deployment
    runs-on: macos-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          channel: 'stable'

      - name: Install dependencies
        run: flutter pub get

      - name: Build iOS
        run: flutter build ios --release --no-codesign

      - name: Upload iOS build artifact
        uses: actions/upload-artifact@v4
        with:
          name: ios-production-build
          path: build/ios/iphoneos/

      - name: Comment with build info
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `üì± **iOS build ready for manual deployment**
              
              üì¶ **Build artifact**: Available for download
              
              ‚ö†Ô∏è **Note**: iOS deployment requires manual upload to App Store Connect due to code signing requirements.`
            }) 