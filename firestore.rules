rules_version = '2';
service cloud.firestore {
  match /databases/{db}/documents {
    function isAdmin() { return request.auth.token.role == 'admin'; }
    function isStaff() { return request.auth.token.role == 'staff'; }
    function isAssignee(resource) { return resource.data.assignedTo == request.auth.uid || resource.data.assignee == request.auth.uid; }

    match /enquiries/{id} {
      // global read for signed-in users
      allow read: if request.auth != null;

      // staff can ONLY update status fields â€” and ONLY if assigned
      allow update: if isStaff()
        && isAssignee(resource)
        && request.resource.data.diff(resource.data).changedKeys().hasOnly(['status','eventStatus','statusUpdatedAt','statusUpdatedBy','updatedAt']);

      // admins full control
      allow create, update, delete: if isAdmin();
    }

    match /users/{uid} {
      allow read: if request.auth != null && (isAdmin() || request.auth.uid == uid);
      allow update: if isAdmin();
    }
  }
}
rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() { return request.auth != null; }
    function isAdmin() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    // Public-ish profile (NO tokens here)
    match /users/{uid} {
      allow read: if isSignedIn();                     // profile-safe fields only
      allow create, update, delete: if isAdmin();
    }

    // NEW: Private per-user tokens (owner only)
    match /users/{uid}/private/notifications/tokens/{tid} {
      allow read, write: if request.auth != null && request.auth.uid == uid;
    }

    // Enquiries - Admins see all, Staff only see assigned enquiries
    match /enquiries/{id} {
      allow read: if isAdmin()
        || (isSignedIn() && resource.data.assignedTo == request.auth.uid);
      allow create, delete: if isAdmin();
      allow update: if isAdmin()
        || (isSignedIn() && resource.data.assignedTo == request.auth.uid);
      
      // Enquiry History - same permissions as parent enquiry
      match /history/{historyId} {
        allow read: if isAdmin()
          || (isSignedIn() && get(/databases/$(database)/documents/enquiries/$(id)).data.assignedTo == request.auth.uid);
        allow create, update: if isAdmin()
          || (isSignedIn() && get(/databases/$(database)/documents/enquiries/$(id)).data.assignedTo == request.auth.uid);
        allow delete: if isAdmin();
      }
    }

    // Per-user notifications (created by Cloud Functions)
    match /notifications/{uid}/items/{nid} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == uid;
      allow create: if isAdmin(); // created by CF with admin privileges
    }

    // Dropdowns - authenticated users can read, admin can manage
    match /dropdowns/{group}/items/{value} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    // Analytics read-only for signed-in users
    match /analytics/{doc=**} {
      allow read: if isSignedIn();
    }

    // User Settings - users can manage their own, admins can manage any
    function isOwner(uid) { return request.auth != null && request.auth.uid == uid; }
    
    match /users/{uid}/settings/{docId} {
      allow read, write: if isSignedIn() && (request.auth.uid == uid || isAdmin());
    }

    // App Config - read for all signed-in users, write for admins only
    match /app_config/{docId} {
      allow read: if isSignedIn();
      allow write: if isAdmin();
    }

    // Admin Audit Trail - admins can read, system can write
    match /admin_audit/{auditId} {
      allow read: if isAdmin();
      allow create: if isSignedIn(); // Allow creation for audit logging
    }
  }
}