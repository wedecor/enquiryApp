rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function isSignedIn() {
      return request.auth != null;
    }

    // Resolve role from users doc of the requester
    function isAdmin() {
      return isSignedIn()
        && exists(/databases/$(database)/documents/users/$(request.auth.uid))
        && get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == "admin";
    }

    // Users collection - Admin can manage, signed-in users can read
    match /users/{uid} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    // Enquiries - Admins see all, Staff restricted to assigned docs
    match /enquiries/{id} {
      allow read: if isAdmin()
                  || (isSignedIn() && resource.data.assignedTo == request.auth.uid);
      allow create, update, delete: if isAdmin();
    }

    // Per-user notifications
    match /notifications/{uid}/items/{nid} {
      allow read, update, delete: if isSignedIn() && request.auth.uid == uid;
      allow create: if isAdmin() || (request.time == resource.data.createdAt); // typically created by CF
    }

    // Dropdowns - authenticated users can read, admin can manage
    match /dropdowns/{group}/items/{value} {
      allow read: if isSignedIn();
      allow create, update, delete: if isAdmin();
    }

    // Optional aggregated analytics collections (if you deploy functions)
    match /analytics/{doc=**} {
      allow read: if isSignedIn();
    }
  }
}